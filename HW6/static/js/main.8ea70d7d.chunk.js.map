{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","inputEl","createRef","useState","words","setWords","items","setItems","desc","setDesc","callApi","api","res","input","current","value","fetch","then","data","json","length","word_dic","objects","property","propName","obj","groupedObjects","Map","object","groupName","has","set","get","push","result","Array","from","keys","sort","key","groupBy","index","class","map","i","word","onClick","console","log","href","id","Set","join","type","placeholder","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","body"],"mappings":"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","file":"static/js/main.8ea70d7d.chunk.js","sourcesContent":["import { createRef, useState } from \"react\";\nimport './App.css';\n\n\nfunction App() {\n\n  function groupBy(objects, property) {\n    // If property is not a function, convert it to a function that accepts one argument (an object) and returns that object's\n    // value for property (obj[property])\n    if(typeof property !== 'function') {\n        const propName = property;\n        property = (obj) => obj[propName];\n    }\n\n    const groupedObjects = new Map(); // Keys: group names, value: list of items in that group\n    for(const object of objects) {\n        const groupName = property(object);\n        //Make sure that the group exists\n        if(!groupedObjects.has(groupName)) {\n            groupedObjects.set(groupName, []);\n        }\n        groupedObjects.get(groupName).push(object);\n    }\n\n    // Create an object with the results. Sort the keys so that they are in a sensible \"order\"\n    const result = {};\n    for(const key of Array.from(groupedObjects.keys()).sort()) {\n        result[key] = groupedObjects.get(key);\n    }\n    return result;\n  }\n\n  const inputEl = createRef();\n  const [words, setWords] = useState([]);\n  const [items, setItems] = useState([]);\n  const [desc, setDesc] = useState(\"Words that rhyme with :\");\n\n  \n\n  \n\n  function callApi(api){\n    if (inputEl !== null){\n      let res = [];\n      if(api === \"rhyme\"){\n        setDesc(\"...loading\");\n        const input = inputEl.current.value\n        fetch(\"https://api.datamuse.com/words?rel_rhy=\"+input)\n        .then(data => data.json())\n        .then(json => {\n          setDesc(\"Words that rhyme with \" + input + \":\");\n          if(json.length === 0){\n            res = \"No Results\";\n          }\n          else{\n            let word_dic = groupBy(json, 'numSyllables');\n            for(const index in word_dic){\n              res.push(<h2 class=\"col\">{index} {index === 1? \"syllable\" : \"syllables\"}</h2>);\n              res.push(word_dic[index].map((i) => {\n                return <li>{i.word}<button class = \"btn btn-outline-success\" onClick = {() => setWords(words => [...words, i.word])}>(save)</button></li>\n              }));\n            }\n          }\n          setItems(res);\n        });\n      }\n\n      else if(api === \"synonyms\"){\n        setDesc(\"...loading\");\n        //setInput(inputEl.current.value);\n        const input = inputEl.current.value\n        fetch(\"https://api.datamuse.com/words?ml=\" + input)\n        .then(data => data.json())\n        .then(json => {\n          setDesc(\"Words with a similar meaning to \" + input + \":\");\n          if(json.length === 0){\n            res = \"No Results\";\n          }\n          else{\n            res.push(json.map((i) =>{\n              return <li>{i.word}<button class = \"btn btn-outline-success\" onClick = {() => setWords(words => [...words, i.word])}>(save)</button></li>\n            }))\n            console.log(res);\n          }\n          setItems(res);\n        });\n        console.log(res);\n       \n      }\n    }\n  }\n\n  return <>\n    <main class=\"container\">\n      <a href = \"https://github.com/xinsongcui/SI579-HW6\">Github link: https://github.com/xinsongcui/SI579-HW6</a>\n      <h1 class=\"row\">Rhyme Finder (579 Problem Set 6)</h1>\n      <div class=\"row\">\n          <div class=\"col\">Saved words: <span id=\"saved_words\">{words.length === 0? \"(none)\" : Array.from(new Set(words)).join(', ')}</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-group col\">\n            <input class=\"form-control\" type=\"text\" placeholder=\"Enter a word\" id=\"word_input\" ref = {inputEl}/>\n            <button id=\"show_rhymes\" type=\"button\" class=\"btn btn-primary\" onClick = {()=>callApi(\"rhyme\")}>Show rhyming words</button>\n            <button id=\"show_synonyms\" type=\"button\" class=\"btn btn-secondary\" onClick = {()=>callApi(\"synonyms\")}>Show synonyms</button>\n        </div>\n      </div>\n        <div class=\"row\">\n          <h2 class=\"col\" id=\"output_description\">{desc}</h2>\n        </div>\n      <div class=\"output row\">\n          <output id = \"word_output\" class=\"col\">{items}</output>\n      </div>\n    </main>\n  </>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.body\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}